.container
    h2 Equipmentkategorien
        .btn-toolbar.pull-right
            button.btn.btn-default(onClick=this.finish.bind(this))
                i.glyphicon.glyphicon-chevron-left
                |  Zur√ºck
    
    table.table.table-striped.table-hover
        thead
            tr
                th
                    | Name
                    button.btn.btn-primary.btn-xs.pull-right(onClick=this.addCategory.bind(this))
                        i.glyphicon.glyphicon-plus
        tbody
            if this.state.categories
                each category in this.state.categories
                    tr
                        td(onClick=this.edit.bind(this,category))
                            = category.name
                            button.btn.btn-default.btn-xs.pull-right(onClick=this.delete.bind(this,category))
                                i.glyphicon.glyphicon-trash
    if this.state.category
        Modal
            .modal-header
                h2= "Kategorie "+(this.state.category._id?"umbenennen":"erstellen")
            .modal-body
                .form-horizontal
                    .form-group
                        label.col-lg-2.control-label Name
                        .col-lg-10
                            input.form-control(type="text" placeholder="Name" value=this.state.category.name onChange=this.onCategoryNameChange.bind(this))
            .modal-footer
                button.btn.btn-default(onClick=this.cancel.bind(this)) Abbrechen
                button.btn.btn-primary(onClick=this.save.bind(this)) Speichern
    if this.state.error
        Modal
            .modal-header
                h2 Ups!
            .modal-body                        
                case this.state.error
                    when 400
                        .alert.alert-warning Diese Kategorie ist noch Objekten zugewiesen. 
            .modal-footer
                button.btn.btn-primary(onClick=this.dismiss.bind(this)) Ich verstehe
script.
    var client = require("../client");
    var Modal = require("./Modal");
script(section="body").    
    getNeededPermissions(){
        return ["equipment_read"];
    }
    
    constructor(props,context){
        super(props,context);
        this.state = {};
        this.loadCategories();
    }
    
    async loadCategories(){
        this.state.categories = await client.getEquipmentCategories();
        this.update();
    }

    addCategory(){
        this.state.category = {name:""};
        this.update();
    }
    
    onCategoryNameChange(e){
        this.state.category.name = e.target.value;
        this.update();
    }
    
    cancel(){
        delete this.state.category;
        this.update();
    }
    
    edit(category,e){        
        if(e.target.tagName == "I" || e.target.tagName == "BUTTON") return;
        this.state.category = category;
        this.update();
    }
    
    dismiss(){
        delete this.state.error;
        this.update();
    }
    async delete(category){
        try{
            await client.deleteEquipmentCategory(category._id);
            this.state.categories.splice(this.state.categories.indexOf(category),1);
        }catch(err){
            this.state.error = err.code;
        }
        this.update();
    }
    
    async save(){
        if(this.state.category._id){
            await client.updateEquipmentCategory(this.state.category._id,this.state.category.name);
        }else{
            var id = await client.createEquipmentCategory(this.state.category.name);
            this.state.categories.push({_id:id,name:this.state.category.name});            
        }
        delete this.state.category;
        this.update();
    }
    
    finish(){
        history.back();
    }
