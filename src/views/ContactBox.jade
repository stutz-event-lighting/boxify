Select(value=this.getValue() loadOptions=this.search.bind(this) onChange=this.onChange.bind(this) disabled=this.props.disabled)
script.
    var Select = require("react-select").Async;
    var client = require("../client");
script(section="body").
    getValue(){
        if(!this.props.value) return undefined;
        if(this.contact && this.contact.value == this.props.value){
            return this.contact;
        }
        client.getContact(this.props.value).then(function(contact){
            this.contact = {value:contact._id,label:(contact.firstname?contact.firstname+" ":"")+(contact.lastname||"")};
            this.forceUpdate();
        }.bind(this));        
        return undefined;
    }
    
    async search(input){
        if(typeof input == "object") return cb(null,{options:[]})
        var query = {search:input||""};
        if(this.props.role) query.role = this.props.role;
        if(this.props.type) query.type = this.props.type;
    
        var contacts = await client.findContacts(query);
        return {options:contacts.map(function(contacts){return {value:contacts._id,label:(contacts.firstname?contacts.firstname+" ":"")+(contacts.lastname||"")}})};
    }
    
    onChange(value){
        this.contact = value?value:null;
        if(this.props.onChange) this.props.onChange(value.value,value.label);
    }
