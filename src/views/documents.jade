div
	table.table.table-striped.table-hover
		thead
			tr
				th Name
				th Gr√∂sse
		tbody
			each document in this.documents
				tr(onClick=this.viewDocument.bind(this,document))
					td= document.filename
					td= filesize(document.length).human("si")
						DeleteButton.btn-xs(containerClass="pull-right" onDelete=this.delete.bind(this,document))
	.btn-toolbar.pull-right
		.btn.btn-primary(onClick=this.chooseFile.bind(this)) Neues Dokument
		input(type="file" multiple="multiple" style="display:none" ref="file" onChange=this.applyFile.bind(this))
script(section="body").
	constructor(props,context){
		super(props,context);
		this.componentWillReceiveProps(props);
	}
	async componentWillReceiveProps(props){
		this.props = props;
		this.reloadDocuments();
	}	
	async reloadDocuments(){
		this.documents = await client.getDocuments(this.props.entity)
		this.forceUpdate();
	}	
	chooseFile(e){
		this.refs.file.click();
	}
	applyFile(e){
		var files = e.target.files;
		for(var file of files) this.uploadFile(file);		
	}
	uploadFile(file){
		var reader = new FileReader();
		reader.onload = async function(e) {
			var id = await client.uploadDocument({entity:this.props.entity,name:file.name,file:e.target.result});
			this.reloadDocuments();
		}.bind(this)
		reader.readAsDataURL(file);
	}
	viewDocument(document){
		window.open("/api/documents/"+document._id,"_blank");
	}
	async delete(document){
		await client.deleteDocument(document._id);
		this.reloadDocuments();
	}
script.
	var client = require("../client");
	var DeleteButton = require("./deletebutton");
	var filesize = require("file-size");
