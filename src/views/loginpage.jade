.container(style="max-width:400px" onKeyDown=this.checkEnter.bind(this))
    if this.state.failed
        .alert.alert-danger Login fehlgeschlagen
    else
        if client.session
            alert.alert-danger Zugriff verweigert
    h2.form-signin-heading Bitte loggen Sie sich ein
    label.sr-only(for='inputEmail') E-Mail
    input#inputEmail.form-control(type='email' placeholder='E-Mail' value=this.state.email onChange=this.onMailChanged.bind(this) required='' autofocus='' style="border-bottom-left-radius:0px;border-bottom-left-radius:0px;marginBottom:-1px")
    label.sr-only(for='inputPassword') Password
    input#inputPassword.form-control(type='password' placeholder='Passwort' value=this.state.password onChange=this.onPasswordChanged.bind(this) required='' style="border-top-left-radius:0px;border-top-left-radius:0px")
    .checkbox
      label
        input(type='checkbox', value='remember-me' onChange=this.onRememberChanged.bind(this) checked=!getLs("dontRememberEmail"))
        |  E-Mail merken
    button.btn.btn-lg.btn-primary.btn-block(onClick=this.login.bind(this)) Einloggen
script.
    var client = require("../client");
    function getLs(key){
        try{
            return localStorage.getItem(key);
        }catch(e){}
    }
    function setLs(key,value){
        try{
            return localStorage.setItem(key,value);
        }catch(e){}
    }
    
    function removeLs(key){
        try{
            return localStorage.removeItem(key);
        }catch(e){}
    }
script(section="body").    
    constructor(props,context){
        super(props,context);
        this.state = {email:getLs("email")||"",password:""};
    }
        
    onMailChanged(e){
        this.state.email = e.target.value;
        this.forceUpdate();
    }
    
    onPasswordChanged(e){
        this.state.password = e.target.value;
        this.forceUpdate();
    }
    
    onRememberChanged(e){
        if(!e.target.checked){
            removeLs("email");
            setLs("dontRememberEmail",1);
        }else{
            removeLs("dontRememberEmail");        
        } 
        this.forceUpdate();
    }
    
    async login(){
        if(!getLs("dontRememberEmail")) setLs("email",this.state.email);
        if(!this.state.email || !this.state.password) return;
        try{
            var sessionId = await client.createSession({email:this.state.email,password:this.state.password});
            this.props.onLogin();
        }catch(e){
            this.state.failed = true;
            this.forceUpdate();
        }
    }
    
    checkEnter(e){
        if(e.keyCode == 13) this.login();
    }
    
