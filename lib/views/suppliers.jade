extends ./base.jade

append body
    - this.checkData();
    .container
        h1 Zulieferer
        .searchbar(style="display:flex")
            .input-group(style="flex:1;display:flex;width:auto;")
                input.form-control(type="text" style="display:block;width:auto;flex:1" onChange=this.search value=this.props.search||"")
                span.input-group-btn(style="display:inline-block;width:auto;")
                    button.btn.btn-default Suchen
            .btn-group(style="margin-left:10px")
                button.btn.btn-primary(onClick=function(){this.create();}.bind(this)) Erfassen
        table.table.table-striped.table-hover
            thead
                tr
                    th Name
                    th
            tbody
                each item in this.props.items
                    tr(onClick=this.edit(item))
                        td= item.name
                        td
                            button.btn.btn-xs.btn-default.pull-right(onClick=this.delete(item))
                                i.glyphicon.glyphicon-trash
    if this.props.create
        .modal(style="display:block").fade.in
            .modal-backdrop(style="bottom:0px;display:block").fade.in
            .modal-dialog
                .modal-content
                    .modal-header
                        h2 Zulieferer erfassen
                    .modal-body
                        .form-horizontal
                            .form-group
                                label.col-lg-2.control-label Name
                                .col-lg-10
                                    input.form-control(type="text" value=this.props.create.name onChange=this.validateCreateName.bind(this))
                    .modal-footer
                        button.btn.btn-default(onClick=this.cancelCreate) Abbrechen
                        button.btn.btn-primary(onClick=this.confirmCreate) Erfassen
    if this.props.delete
        .modal(style="display:block").fade.in
            .modal-backdrop(style="bottom:0px;display:block").fade.in
            .modal-dialog
                .modal-content
                    .modal-header
                        h2 Equipmenttyp löschen
                    .modal-body= "Sind sie sicher, dass sie \""+this.props.delete.name+"\" löschen möchten?"
                    .modal-footer
                        button.btn.btn-default(onClick=this.cancelDelete) Abbrechen
                        button.btn.btn-primary(onClick=this.confirmDelete) Löschen
    if this.props.error
        .modal(style="display:block").fade.in
            .modal-backdrop(style="bottom:0px;display:block").fade.in
            .modal-dialog
                .modal-content
                    .modal-header
                        h2 Ups!
                    .modal-body                        
                        case this.props.error
                            when 601
                                .alert.alert-warning Dieser Kunde ist noch Objekten zugewiesen. 
                    .modal-footer
                        button.btn.btn-primary(onClick=this.dismiss) Ich verstehe
script.
    var client = require("../client.js");
    exports.checkData = function(){
        var self = this;
        if(!this.props.items){
            client.findSuppliers({search:this.props.search},function(err,items){
                self.props.items = items;
                self.update();
            });
        }
    }

    exports.search = function(e){
        this.props.search = e.target.value;
        delete this.props.items;
        this.update();
    }
    
    exports.dismiss = function(){
        delete this.props.error;
        this.update();
    }

    exports.create = function(){
        var self = this;
        this.props.create = {name:""};
        this.update();
    }
    exports.validateCreateName = function(e){
        this.props.create.name = e.target.value;
        this.update();
    }
    exports.cancelCreate = function(){
        delete this.props.create;
        this.update();
    }
    exports.confirmCreate = function(){
        var self = this;
        client.createSupplier(this.props.create.name,function(err,id){
            if(err) return;
            delete self.props.create;
            self.update();
            visit("/suppliers/"+id)
        });
    }

    exports.edit = function(item){
        return function(e){
            if(e.target.tagName == "I" || e.target.tagName == "BUTTON") return;
            visit("/suppliers/"+item._id)
        }        
    }

    exports.delete = function(item){
        return function(){
            this.props.delete = item;
            this.update();
        }.bind(this)
    }

    exports.cancelDelete = function(){
        delete this.props.delete;
        this.update();
    }
    exports.confirmDelete = function(){
        var self = this;
        var del = this.props.delete;
        delete this.props.delete;
        client.deleteSupplier(del._id,function(err){
            if(err){
                self.props.error = err.code;
            }else{
                delete self.props.items;
            }
            self.update();
        })
    }
