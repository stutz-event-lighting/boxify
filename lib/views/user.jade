extends ./base.jade

append body
    - this.checkData();
    if this.props.user
        .container
            h2 Benutzer bearbeiten
                .btn-toolbar.pull-right
                    button.btn.btn-default(onClick=function(){this.cancel()}.bind(this))
                        i.glyphicon.glyphicon-chevron-left
                        |  Zurück
                    button.btn.btn-primary(onClick=function(){this.save()}.bind(this))
                        i.glyphicon.glyphicon-ok
                        |  Speichern
            .row
                .col-lg-3.col-md-4.col-sm-6.col-xs-12
                    div.text-center
                        //img.img-responsive(src=this.getImagePath() onClick=this.choseImage)
                        //input(type="file" style="display:none" ref="image" onChange=this.applyImage)
                .col-lg-9.col-md-8.col-sm-6.col-xs-12
                    h4 Benutzerinformationen
                    .form-horizontal
                        .form-group
                            label.col-lg-2.control-label Vor- und Nachname
                            .col-lg-10
                                .row
                                    .col-xs-6
                                        input.form-control(type="text" value=this.props.user.firstname onChange=this.validateFirstname.bind(this))
                                    .col-xs-6
                                        input.form-control(type="text" value=this.props.user.lastname onChange=this.validateLastname.bind(this))
                        .form-group
                            label.col-lg-2.control-label E-Mail
                            .col-lg-10
                                input.form-control(type="text" placeholder="Name" value=this.props.user.email onChange=function(e){this.props.user.email = e.target.value; this.update()}.bind(this))
            .row
                .col-xs-12
                    h4 Berechtigungen
                    each permission in this.props.user.permissions
                        div
                            label
                                input(type="checkbox" checked=permission.allowed onChange=this.togglePermission(permission))
                                = " "+permission.name
            .row
                .col-xs-12
                    h2 Passwort & PIN
                    .btn-toolbar
                        .btn.btn-default(onClick=this.changePassword) Passwort ändern
                        .btn.btn-default(onClick=this.changePin) PIN ändern
        if this.props.changepassword
            .modal(style="display:block").fade.in
                .modal-backdrop(style="bottom:0px;display:block").fade.in
                .modal-dialog
                    .modal-content
                        .modal-header
                            h2 Passwort ändern
                        .modal-body
                            .form-horizontal
                                .form-group
                                    label.col-lg-2.control-label Neues Passwort
                                    .col-lg-10
                                        input.form-control(type="password" value=this.props.changepassword.password onChange=this.onPasswordChanged)
                                .form-group
                                    label.col-lg-2.control-label Neues Passwort bestätigen
                                    .col-lg-10
                                        input.form-control(type="password" value=this.props.changepassword.password2 onChange=this.onPassword2Changed)
                        .modal-footer
                            button.btn.btn-default(onClick=this.cancelChangePassword) Abbrechen
                            button.btn.btn-primary(onClick=this.confirmChangePassword) Erstellen
        if this.props.changepin
            .modal(style="display:block").fade.in
                .modal-backdrop(style="bottom:0px;display:block").fade.in
                .modal-dialog
                    .modal-content
                        .modal-header
                            h2 PIN ändern
                        .modal-body
                            .form-horizontal
                                .form-group
                                    label.col-lg-2.control-label Neue PIN
                                    .col-lg-10
                                        input.form-control(type="password" value=this.props.changepin.pin onChange=this.onPinChanged)
                        .modal-footer
                            button.btn.btn-default(onClick=this.cancelChangePin) Abbrechen
                            button.btn.btn-primary(onClick=this.confirmChangePin) Erstellen
script.
    var client = require("../client.js");
    
    exports.getNeededPermissions = function(){
        return ["users_read"];
    }
    
    exports.checkData = function(){
        console.log("checking data");
        var self = this;
        if(!this.props.user){
            console.log("getting user");
            client.getUser(this.props.params.user,function(err,user){
                if(err) return;
                self.props.user = user;
                self.update();
            })
        }
    }
    
    exports.cancel = function(){
        history.back();
    }
    
    exports.validateFirstname = function(e){
        this.props.user.firstname = e.target.value;
        this.update();
    }
    
    exports.validateLastname = function(e){
        this.props.user.lastname = e.target.value;
        this.update();
    }
    
    exports.togglePermission = function(permission){
        return function(e){
            permission.allowed = e.target.checked;
            this.update();
        }.bind(this);        
    }

    exports.save = function(){
        var permissions = [];
        for(var permission in this.props.user.permissions){
            if(this.props.user.permissions[permission].allowed) permissions.push(permission);
        }
        
        client.saveUser(this.props.user._id,{
            firstname:this.props.user.firstname,
            lastname:this.props.user.lastname,
            email:this.props.user.email,
            permissions:permissions
        },function(err){
            if(err) return true;
            back(true);
        });
    }
    
    exports.changePassword = function(){
        this.props.changepassword = {password:"",password2:""};
        this.update();
    }
    
    exports.onPasswordChanged = function(e){
        this.props.changepassword.password = e.target.value;
        this.update();
    }
    
    exports.onPassword2Changed = function(e){
        this.props.changepassword.password2 = e.target.value;
        this.update();
    }
    
    exports.cancelChangePassword = function(){
        delete this.props.changepassword;
        this.update();
    }
    
    exports.confirmChangePassword = function(){
        if(!this.props.changepassword.password.length) return alert("Bitte geben Sie ein neues Passwort ein");
        if(this.props.changepassword.password != this.props.changepassword.password2) return alert("Die Passwörter sind nicht gleich");        
        client.setPassword(this.props.params.user,this.props.changepassword.password,function(err){
            delete this.props.changepassword;
            this.update();
        }.bind(this))
    }
    
    exports.changePin = function(){
        this.props.changepin = {pin:""};
        this.update();
    }
    
    exports.onPinChanged = function(e){
        this.props.changepin.pin = e.target.value;
        this.update();
    }
    
    exports.cancelChangePin = function(){
        delete this.props.changepin;
        this.update();
    }
    
    exports.confirmChangePin = function(){
        if(!this.props.changepin.pin.length) return alert("Bitte geben Sie eine neue PIN ein");
        client.setPin(this.props.params.user,this.props.changepin.pin,function(err){
            delete this.props.changepin;
            this.update();
        }.bind(this))
    }
