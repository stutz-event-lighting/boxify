extends ./base.jade

append body
    - this.checkData();
    if this.props.item
        .container
            h2 Kunden bearbeiten
                .btn-toolbar.pull-right
                    button.btn.btn-default(onClick=this.cancel)
                        i.glyphicon.glyphicon-chevron-left
                        |  Zur√ºck
                    button.btn.btn-primary(onClick=this.save)
                        i.glyphicon.glyphicon-ok
                        |  Speichern
            .row
                .col-lg-3.col-md-4.col-sm-6.col-xs-12
                    div.text-center
                        img.img-responsive(src=this.getImagePath() onClick=this.choseImage)
                        input(type="file" style="display:none" ref="image" onChange=this.applyImage)
                .col-lg-9.col-md-8.col-sm-6.col-xs-12
                    h3 Zulieferer Daten
                    .form-horizontal
                        .form-group
                            label.col-lg-2.control-label Name
                            .col-lg-10
                                input.form-control(placeholder="Name" value=this.props.item.name onChange=this.onNameChange)
            .row
                .col-xs-12
                    h3 Lieferungen
                    table.table.table-striped.table-hover
                        thead
                            th Datum
                            th Projekt
                            th Typen
                            th Objektanzahl
script.
    var client = require("../client.js");
    var moment = require("moment");
    
    exports.getNeededPermissions = function(){
        return ["suppliers_read"];
    }
    
    exports.checkData = function(){
        var self = this;
        if(this.props.item === undefined){
            client.getSupplier(this.props.params.id,function(err,supplier){
                if(err) return;
                self.props.item = supplier;
                self.update();
            });
        }
    }
    
    exports.onNameChange = function(e){
        this.props.item.name = e.target.value;
        this.update();
    }
    
    exports.getImagePath = function(){
        return this.props.item.image?this.props.item.image.url:"/api/suppliers/"+this.props.item._id+"/image";
    }

    exports.choseImage = function(e){
        this.refs.image.getDOMNode().click();
    }
    
    exports.applyImage = function(e){
        var self = this;
        var files = e.target.files;
        if(files.length && (files[0].type == "image/jpeg" || files[0].type == "image/jpg" || files[0].type == "image/png")){
            var reader = new FileReader();
            reader.onload = function(e) {
                self.props.item.image = {file:files[0],url:e.target.result}
                self.update();
            }
            reader.readAsDataURL(files[0]);
        }
    }

    exports.cancel = function(){
        history.back();
    }

    exports.save = function(){
        client.updateSupplier(this.props.item._id,{name:this.props.item.name,image:this.props.item.image?this.props.item.image.url:undefined},function(err){
            if(err) return true;
            back(true);
        });
    }
