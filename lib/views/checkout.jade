extends ./base.jade

append body
    - this.checkData();
    if this.props.data
        .container
            h2 Warenausgang
                .btn-toolbar.pull-right
                    button.btn.btn-default(onClick=this.cancel)
                        i.glyphicon.glyphicon-chevron-left
                        |  Abbrechen
                    button.btn.btn-primary(onClick=this.save)
                        i.glyphicon.glyphicon-ok
                        |  Speichern
            .row
                .col-xs-12
                    h3 Equipment
                    table.table.table-striped.table-hover
                        thead
                            tr
                                th ID
                                th Name
                                th Anzahl
                                th Gebraucht
                                th VerfÃ¼gbar
                        tbody
                            each type in this.props.data.types
                                if type.needed !== undefined || type.count > 0
                                    tr
                                        td= type._id
                                        td= type.name
                                        td= (type.count||0)
                                        td= (type.needed||0)
                                        td= type.available
                                    tr
                                        td(colSpan="3" tyle="text-align:center") here comes the detailed list!
                                    
                                        
main.
    var client = require("../client.js");
    
    exports.checkData = function(){
        var self = this;
        if(this.props.data === undefined){
            var opts = {};
            if(this.props.params.reservation) opts.reservation = this.props.params.reservation;
            client.getCheckout(this.props.params.project,this.props.params.checkout,opts,function(err,data){
                if(err) return;
                self.props.data = data;
                console.log(data);
                data.categories["undefined"] = {_id:"undefined",name:"Nicht kategorisiert"};
                for(var type in data.types){
                    var category = data.categories[data.types[type].category];
                    if(!category.types) category.types = [];
                    category.types.push(type);                    
                }
                self.update();
            });
        }
    }

    exports.cancel = function(){
        history.back();
    }
    
    exports.handleScan = function(code){
        if(code.kind != "EQ") return true;
        console.log(code);
        
        var type = this.props.data.types[code.type];
        var count = type.count||0;
        if(count >= type.available){
            new Audio("/public/audio/error.wav").play();
            return;
        }
        this.props.data.types[code.type].count = count+(code.count||1);
        this.update();
    }

    exports.save = function(){
        client.updateReservation(this.props.params.project,this.props.params.reservation,this.props.data.reservation.items,function(err){
            if(err) return true;
            back(true);
        });
    }
